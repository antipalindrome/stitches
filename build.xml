<?xml version="1.0" encoding="utf-8"?>
<project name="Stitches" basedir="." default="prod">
    

    <description>ANT build file for git://github.com/draeton/stitches</description>
    
    
    <target name="-load.properties" description="Set properties for this build">
        <echo message="Set properties for this build"/>
        
        <property environment="env"/>
        <property file="build.properties"/>
        
        <property name="version" value="${build.major}.${build.minor}.${build.number}"/>
        
        <input message="Please enter a commit message:" addproperty="commit.message"/>
        <condition property="commit.message.yes">
            <length string="${commit.message}" trim="true" when="greater" length="12"/>
        </condition>
    </target>
    
        
    <macrodef name="git">
        <attribute name="command"/>
        <attribute name="failonerror" default="true"/>
        <attribute name="dir" default=""/>
        <element name="args" optional="true"/>
        <sequential>
            <echo message="git @{command}"/>
            <exec executable="git" dir="@{dir}">
                <arg line="@{command}"/>
                <args/>
            </exec>
        </sequential>
    </macrodef>
    
    
    <target name="-init" depends="-load.properties" description="Make project directory structure" if="commit.message.yes">
        <echo message="Starting build ${version}..."/>
        <echo message="Make project directory structure"/>
        
        <delete dir="${build}"/>
        <delete dir="${docs}"/>
        
        <mkdir dir="${build}"/>
        <mkdir dir="${docs}"/>
    </target>

    
    <!-- skipping for now... I need jshint4java!!! -->
    <target name="jslint" depends="-load.properties" description="JSHint check">
        <echo message="JSLint check"/>
        
        <taskdef name="jslint" classname="com.googlecode.jslint4java.ant.JSLintTask" classpath="${jslint4java}" />
        
        <jslint options="undef,white">
            <formatter type="plain" />
            <formatter type="plain" destfile="${build}/jslint.out" />
            <fileset dir="${src}">
                <include name="*.js"/>
                <exclude name="lib"/>
            </fileset>
        </jslint>
	    <echo message="Finished linting"/>
    </target>
    
    
    <target name="-readme" depends="-load.properties" description="Updating version number in README">        
        <echo message="Updating version number in README"/>
        
        <delete file="README.md"/>
        <copy file="${templates}/README.md" tofile="README.md"/>
        <replace file="README.md" token="@VERSION@" value="${version}"/>
    </target>
    
    
    <target name="-docco" depends="-init" description="Create docs using Docco">
        <echo message="Create docs using Docco"/>
        
        <exec executable="${docco}">
            <arg value="${src}/main.js"/>
            <arg value="${src}/icons.js"/>
            <arg value="${src}/icon.js"/>
            <arg value="${src}/page.js"/>
        </exec>
        <!-- clean up after docco -->
        <delete dir="-p"/>
    </target>
    
    
    <target name="-concat" depends="-init" description="Concatenation of JS and CSS">
        <echo message="Concatenation of JS and CSS"/>

        <concat destfile="${build}/js/stitches-${version}.js" force="no">
           <fileset dir="${src}" includes="main.js" />
           <fileset dir="${src}" includes="icons.js" />
           <fileset dir="${src}" includes="icon.js" />
           <fileset dir="${src}" includes="page.js" />
        </concat>
        <concat destfile="${build}/css/stitches-${version}.css" force="no">
           <fileset dir="${src}" includes="stitches.css" />
        </concat>
    </target>
    
    
    <target name="-minify" depends="-concat" description="Invoke YUI compressor">
        <echo message="Invoke YUI compressor"/>
        
        <path id="task.classpath">
            <pathelement location="${yui-compressor.jar}"/>
            <pathelement location="${yui-compressor-ant-task.jar}"/>
        </path>
        <taskdef name="yui-compressor" classname="net.noha.tools.ant.yuicompressor.tasks.YuiCompressorTask">
            <classpath refid="task.classpath"/>
        </taskdef>
        
        <yui-compressor warn="false" charset="UTF-8" fromdir="${build}" todir="${build}">
           <include name="js/stitches-${version}.js" />
           <include name="css/stitches-${version}.css" />
        </yui-compressor>
    </target>
    
    
    <target name="-copylib" depends="-init" description="Copying dependencies">
        <echo message="Copying dependencies"/>
        
       <copy todir="${build}/js">
           <fileset dir="${src}" includes="*.html"/>
       </copy>
        <copy todir="${build}/js">
            <fileset dir="${src}/lib"/>
        </copy>
    </target>
    
    
    <target name="-zip" depends="-init" description="Create a zip file for distribution">       
        <echo message="Create a zip file for distribution" />
        
        <zip destfile="${dist}/stitches-${version}.zip" basedir="${build}" />
    </target>
    
    
    <target name="-commit" depends="-init" description="Commit new build to master git repo">
        <echo message="Commit new build to master git repo"/>
        
        <git command="add">
            <args><arg line="."/></args>
        </git>
        <git command="commit">
            <args><arg value="-am Build ${version} - ${commit.message}"/></args>
        </git>
        <git command="push">
            <args>
                <arg value="origin"/>
                <arg value="master"/>
            </args>
        </git>
    </target>
    
    
    <target name="-gh-pages" depends="-load.properties" description="Push new changes to gh-pages">
        <echo message="Push new changes to gh-pages"/>
        
        <echo message="copy new index.md to gh-pages and update version number"/>
        <delete file="${gh-pages}/index.md"/>
        <copy file="${templates}/index.md" tofile="${gh-pages}/index.md"/>
        <replace file="${gh-pages}/index.md" token="@VERSION@" value="${version}"/>
        
        <echo message="copy new dist to gh-pages dist"/>
        <copy file="${dist}/stitches-${version}.zip" tofile="${gh-pages}/dist/stitches-${version}.zip"/>
        
        <echo message="delete css and js, and copy new from build dir"/>
        <delete dir="${gh-pages}/css"/>
        <delete dir="${gh-pages}/js"/>
        <mkdir dir="${gh-pages}/css"/>
        <mkdir dir="${gh-pages}/js"/>        
        <copy todir="${gh-pages}/css">
            <fileset dir="${build}/css" includes="*.css"/>
        </copy>
        <copy todir="${gh-pages}/js">
            <fileset dir="${build}/js" includes="*.js"/>
        </copy>
        
        <echo message="delete docs, and copy new docs"/>
        <delete dir="${gh-pages}/docs"/>        
        <copy todir="${gh-pages}/docs">
            <fileset dir="${docs}" includes="**"/>
        </copy>
    </target>
    
    
    <target name="-gh-pages-commit" depends="-gh-pages" description="Commit new build to gh-pages git repo">
        <echo message="Commit new build to gh-pages git repo"/>
        
        <git command="add" dir="${gh-pages}">
            <args><arg line="."/></args>
        </git>
        <git command="commit" dir="${gh-pages}">
            <args><arg value="-am Build ${version} - ${commit.message}"/></args>
        </git>
        <git command="push" dir="${gh-pages}">
            <args>
                <arg value="origin"/>
                <arg value="gh-pages"/>
            </args>
        </git>
    </target>

    
    <target name="-increment" depends="-load.properties" description="Increment build number">
        <echo message="Increment build number"/>
        
        <propertyfile file="build.properties">
            <entry key="build.number" type="int" operation="+" default="0"/>
        </propertyfile>
    </target>
    
    
    <!-- * build * -->
    <target name="prod"
        description="Builds project files for production use"
        depends="
            -load.properties,
            -init,
            -readme,
            -docco,
            -concat,
            -minify,
            -copylib,
            -zip,
            -commit,
            -gh-pages-commit,
            -increment">
    </target>
    
    
</project>